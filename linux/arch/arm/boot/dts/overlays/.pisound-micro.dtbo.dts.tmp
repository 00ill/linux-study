# 0 "arch/arm64/boot/dts/overlays/pisound-micro-overlay.dts"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "arch/arm64/boot/dts/overlays/pisound-micro-overlay.dts"
# 17 "arch/arm64/boot/dts/overlays/pisound-micro-overlay.dts"
/dts-v1/;
/plugin/;

# 1 "./scripts/dtc/include-prefixes/dt-bindings/gpio/gpio.h" 1
# 21 "arch/arm64/boot/dts/overlays/pisound-micro-overlay.dts" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/pinctrl/bcm2835.h" 1
# 22 "arch/arm64/boot/dts/overlays/pisound-micro-overlay.dts" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/irq.h" 1
# 23 "arch/arm64/boot/dts/overlays/pisound-micro-overlay.dts" 2

/ {
 compatible = "brcm,bcm2835";

 fragment@0 {
  target = <&gpio>;
  __overlay__ {
   pisound_micro_pins: pisound_micro_pins {
    brcm,pins = <16 26>;
    brcm,function = <0 0>;
    brcm,pull = <2 2>;
   };
  };
 };

 fragment@1 {
  target-path = "/";
  __overlay__ {
   clk_codec: clk-codec {
    compatible = "fixed-clock";
    #clock-cells = <0>;
    clock-frequency = <12000000>;
    status = "okay";
   };
  };
 };

 fragment@2 {
  target = <&i2c_arm>;
  __overlay__ {
   status = "okay";

   #address-cells = <1>;
   #size-cells = <0>;

   pisound_micro_ctrl: pisound_micro_ctrl@12 {
    compatible = "blokas,upisnd-ctrl";

    pinctrl-names = "default";
    pinctrl-0 = <&pisound_micro_pins>;

    reg = <0x12>;
    status = "okay";

    interrupt-parent = <&gpio>;
    interrupt-controller;
    interrupts = <26 8>;
    interrupt-names = "data_available";

    gpio-controller;
    #gpio-cells = <2>;

    data_available-gpios = <&gpio 26 1>;
    reset-gpios = <&gpio 16 1>;
   };

   pisound_micro_codec: upisnd_codec@3b {
    #sound-dai-cells = <0>;
    compatible = "blokas,upisnd-codec";
    reg = <0x3b>;

    clock-names = "mclk";
    clocks = <&clk_codec>;
# 97 "arch/arm64/boot/dts/overlays/pisound-micro-overlay.dts"
    status = "okay";
   };
  };
 };

 fragment@3 {
  target = <&sound>;
  __overlay__ {
   compatible = "blokas,pisound-micro";
   codec = <&pisound_micro_codec>;
   ctrl = <&pisound_micro_ctrl>;
   i2s-controller = <&i2s_clk_consumer>;
   status = "okay";
  };
 };

 fragment@4 {
  target = <&i2s_clk_consumer>;
  __overlay__ {
   status = "okay";
  };
 };

 __overrides__ {
  input-mode=<&pisound_micro_codec>,"input-mode{single-ended,differential}";
  hp-out-mode=<&pisound_micro_codec>,
   "hp-out-mode{capless-headphone,headphone,line-out}";
  line-out-mode=<&pisound_micro_codec>,"line-out-mode{line-out,headphone}";
  mono-out-mode=<&pisound_micro_codec>,"mono-out-mode{line-out,headphone}";
 };

 __exports__ {
  pisound_micro_ctrl;
 };
};
